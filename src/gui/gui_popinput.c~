#define _XOPEN_SOURCE_EXTENDED /* To get ncurses wide char support */
#define __USE_XOPEN_EXTENDED

#include <curses.h>
#include <stdint.h>
#include <string.h>
#include <stdlib.h>
#include <unistd.h>
#include "constants.h"
#include "datatype.h"
#include "gui_datatype.h"
#include "gui_util.h"
#include "gui_generic.h"
#include "debug_util.h"

void wnd_popinput_handler(PTR_WND_MANAGER wm_mgr, PTR_WND src, PTR_WND dst, PTR_EVENT event)
{
  const char* func_name = __func__;
  debug_log_enter(FINE, func_name, NULL);

  debug_log_exit(FINE, func_name);
}

void wnd_popinput_refresh(PTR_WND_MANAGER wm_mgr, PTR_WND self, void* data)
{
  const char* func_name = __func__;
  debug_log_enter(FINE, func_name, NULL);
  touchwin(self->curses_wnd);
  wrefresh(self->curses_wnd);
  debug_log_exit(FINE, func_name);
}


char* wnd_popinput(PTR_WND_MANAGER wm_mgr, PTR_WND parent, uint32_t height, uint32_t width)
{
  const char* func_name = __func__;
  debug_log_enter(FINE, func_name, NULL);
  EVENT event;
  char* p = NULL;
  PTR_WND wnd = wnd_init(wm_mgr, NULL, "input", height+2, width+4, (wm_mgr->height-height)/2, (wm_mgr->width-width)/2);
  PTR_WND subwnd = wnd_init(wm_mgr, wnd, "inputfield", height, width, 1, 2);
  wnd->handler = wnd_popinput_handler;
  wnd->show = wnd_popinput_refresh;
  wnd->parent = (void*)parent;
  wnd->user_data = (void*)malloc(sizeof(char)*subwnd->height*subwnd->width);
  wborder(wnd->curses_wnd, ACS_VLINE, ACS_VLINE, ACS_HLINE, ACS_HLINE, ACS_ULCORNER, ACS_URCORNER, ACS_LLCORNER, ACS_LRCORNER);
  curs_set(True);
  echo();
  wmove(subwnd->curses_wnd, 0, 0);
  wrefresh(wnd->curses_wnd);
  wrefresh(subwnd->curses_wnd);
  wgetnstr(subwnd->curses_wnd, (char*)wnd->user_data, subwnd->height*subwnd->width-1);
  debug_log(FINE, func_name, (char*)wnd->user_data);
  noecho();
  curs_set(False);
  werase(subwnd->curses_wnd);
  werase(wnd->curses_wnd);
  wrefresh(subwnd->curses_wnd);
  wrefresh(wnd->curses_wnd);
  /*
  event.type = ET_INPUT_COMPLETE;
  event.usrdata = wnd->usrdata;
  wnd->parent->handler(wm_mgr, wnd, wnd->parent, &event);
  */
  p = (char*)strdup((wnd->user_data));
  delwin(subwnd->curses_wnd);
  free(subwnd->title);
  free(subwnd);
  free(wnd->user_data);
  wm_mgr->pop(wm_mgr, wnd);
  debug_log_exit(FINE, func_name);
  return p;
}
